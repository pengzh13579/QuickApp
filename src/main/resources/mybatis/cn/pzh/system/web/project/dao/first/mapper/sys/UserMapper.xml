<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.pzh.system.web.project.dao.first.mapper.sys.UserMapper">

    <resultMap id="BaseResultMap" type="cn.pzh.system.web.project.dao.first.entity.sys.SystemUserEntity" >
        <result column="ID" property="id" jdbcType="INTEGER" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
        <result column="AVATAR" property="avatar" jdbcType="VARCHAR" />
        <result column="AVATAR_PATH" property="avatarPath" jdbcType="VARCHAR" />
        <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
        <result column="SALT" property="salt" jdbcType="VARCHAR" />
        <result column="SEX" property="sex" jdbcType="INTEGER" />
        <result column="BIRTHDAY" property="birthday" jdbcType="DATE" />
        <result column="IS_ONLINE" property="isOnline" jdbcType="INTEGER" />
        <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
        <result column="roleName" property="roleName" jdbcType="VARCHAR" />
        <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
        <result column="DEPTNAME" property="deptName" jdbcType="VARCHAR" />
        <result column="DIS_FLAG" property="disFlag" jdbcType="INTEGER" />
        <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
        <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
        <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
        <result column="UPDATE_DATE" property="updateDate" jdbcType="DATE" />
    </resultMap>

    <!-- 开启基于redis的二级缓存 -->
    <!--<cache type="cn.pzh.system.web.project.common.conf.redis.RedisCache"/>-->

    <sql id="selectColumn">
        SYS_USER.ID,
        SYS_USER.USER_NAME,
        SYS_USER.REAL_NAME,
        SYS_USER.AVATAR,
        SYS_USER.SEX,
        SYS_USER.PASSWORD,
        SYS_USER.SALT,
        SYS_USER.BIRTHDAY,
        SYS_USER.IS_ONLINE,
        SYS_USER.ROLE_ID,
        SYS_USER.DEPT_ID,
        SYS_USER.DIS_FLAG,
        SYS_USER.CREATE_DATE,
        SYS_USER.UPDATE_DATE,
        SYS_USER.CREATE_USER,
        SYS_USER.UPDATE_USER
    </sql>

    <sql id="whereCause">
        <where>
            <if test="disFlag == null or disFlag == ''">
                SYS_USER.DIS_FLAG <![CDATA[ <> ]]> 1
            </if>
            <if test="disFlag != null and disFlag != ''">
                SYS_USER.DIS_FLAG = #{disFlag}
            </if>
            <if test="userName != null and userName != ''">
                AND SYS_USER.USER_NAME like CONCAT('%',#{userName},'%')
            </if>
            <if test="realName != null and realName != ''">
                AND SYS_USER.REAL_NAME like CONCAT('%',#{realName},'%')
            </if>
            <if test="sex != null">
                AND SYS_USER.SEX = #{sex}
            </if>
            <if test="createDateStart != null and createDateStart != ''">
                AND SYS_USER.CREATE_DATE <![CDATA[ >= ]]> #{createDateStart}
            </if>
            <if test="createDateEnd != null and createDateEnd != ''">
                AND SYS_USER.CREATE_DATE <![CDATA[ <= ]]> #{createDateEnd}
            </if>
        </where>
    </sql>

    <!--  -->
    <select id="listUsers" parameterType="cn.pzh.system.web.project.dao.first.entity.sys.SystemUserEntity" resultMap="BaseResultMap">
  	     SELECT
          <include refid="selectColumn"></include>,
          (SELECT GROUP_CONCAT(SYS_ROLE.ROLE_NAME) FROM SYS_ROLE SYS_ROLE WHERE INSTR(SYS_USER.role_id,SYS_ROLE.ID)) roleName
        FROM SYS_USER SYS_USER
        <include refid="whereCause"></include>
    </select>

    <!--  -->
    <select id="getUserByLoginName" parameterType="String" resultMap="BaseResultMap">
        SELECT
            SYS_USER.USER_NAME,
            SYS_USER.REAL_NAME,
            SYS_USER.AVATAR,
            SYS_USER.PASSWORD,
            SYS_USER.SALT,
            SYS_USER.ROLE_ID,
            SYS_USER.DEPT_ID,
            SYS_USER.IS_ONLINE,
            SYS_USER.DIS_FLAG
        FROM
          SYS_USER SYS_USER
        LEFT JOIN SYS_CONTACT SYS_CONTACT
        ON SYS_USER.USER_NAME = SYS_CONTACT.USER_NAME
        AND (SYS_CONTACT.CONTACT_TYPE = 1 OR SYS_CONTACT.CONTACT_TYPE = 2)
        AND SYS_CONTACT.DIS_FLAG = 0
        WHERE (
          SYS_USER.USER_NAME = #{loginName,jdbcType=VARCHAR}
          OR SYS_CONTACT.CONTACT_INFO = #{loginName,jdbcType=VARCHAR}
        )
        LIMIT 0,1
    </select>

    <select id="getUserByUserName" parameterType="String" resultMap="BaseResultMap">
        SELECT
          <include refid="selectColumn"></include>,
          COMM_FILE.PATH AVATAR_PATH
        FROM
          SYS_USER SYS_USER
          LEFT JOIN COMM_FILE COMM_FILE
          ON SYS_USER.AVATAR = COMM_FILE.ID
        WHERE SYS_USER.USER_NAME = #{userName,jdbcType=VARCHAR}
    </select>

    <select id="getUserById" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="selectColumn"></include>
        FROM
        SYS_USER SYS_USER
        WHERE SYS_USER.ID = #{id,jdbcType=VARCHAR}
    </select>

    <!--  -->
    <insert id="saveUser" parameterType="cn.pzh.system.web.project.dao.first.entity.sys.SystemUserEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO SYS_USER (
            USER_NAME,
            REAL_NAME,
            AVATAR,
            SEX,
            PASSWORD,
            SALT,
            BIRTHDAY,
            DIS_FLAG,
            CREATE_USER,
            CREATE_DATE,
            UPDATE_USER,
            UPDATE_DATE)
        VALUES (
            #{userName,jdbcType=VARCHAR},
            #{realName,jdbcType=VARCHAR},
            #{avatar,jdbcType=VARCHAR},
            #{sex,jdbcType=INTEGER},
            #{password,jdbcType=VARCHAR},
            #{salt,jdbcType=VARCHAR},
            #{birthday,jdbcType=DATE},
            #{disFlag,jdbcType=INTEGER},
            #{createUser,jdbcType=VARCHAR},
            #{createDate,jdbcType=TIMESTAMP},
            #{updateUser,jdbcType=VARCHAR},
            #{updateDate,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updateUser" parameterType="cn.pzh.system.web.project.dao.first.entity.sys.SystemUserEntity">
        UPDATE SYS_USER
        <trim prefix="set" suffixOverrides=",">
            <if test="avatar != null">AVATAR=#{avatar,jdbcType=VARCHAR},</if>
            <if test="realName != null">REAL_NAME=#{realName,jdbcType=VARCHAR},</if>
            <if test="sex != null">SEX=#{sex,jdbcType=VARCHAR},</if>
            <if test="roleId != null">ROLE_ID=#{roleId,jdbcType=VARCHAR},</if>
            <if test="birthday != null">BIRTHDAY=#{birthday,jdbcType=DATE},</if>
            <if test="isOnline != null">IS_ONLINE=#{isOnline,jdbcType=INTEGER},</if>
            <if test="password != null">PASSWORD=#{password,jdbcType=VARCHAR},</if>
            <if test="salt != null">SALT=#{salt,jdbcType=VARCHAR},</if>
            <if test="disFlag != null">DIS_FLAG=#{disFlag,jdbcType=NUMERIC},</if>
            <if test="updateUser != null">UPDATE_USER=#{updateUser,jdbcType=VARCHAR},</if>
            <if test="updateDate != null">UPDATE_DATE=#{updateDate,jdbcType=TIMESTAMP},</if>
        </trim>
        where USER_NAME=#{userName,jdbcType=VARCHAR}
    </update>

    <!--  -->
    <select id="listDepartmentUsers" parameterType="String" resultMap="BaseResultMap">
        SELECT
            SYS_USER.ID,
            SYS_USER.USER_NAME,
            SYS_USER.REAL_NAME
        FROM SYS_USER_DEPARTMENT SYS_USER_DEPARTMENT
        LEFT JOIN SYS_USER SYS_USER
        ON SYS_USER_DEPARTMENT.USER_ID = SYS_USER.ID
        LEFT JOIN SYS_DEPARTMENT SYS_DEPARTMENT
        ON SYS_USER_DEPARTMENT.DEPARTMENT_ID = SYS_DEPARTMENT.ID
        WHERE SYS_DEPARTMENT.CODE = #{code,jdbcType=VARCHAR}
        AND SYS_USER.DIS_FLAG <![CDATA[ <> ]]> 1
        AND SYS_DEPARTMENT.DIS_FLAG <![CDATA[ <> ]]> 1
    </select>

    <!-- 批量保存角色信息 -->
    <insert id="saveList" parameterType="java.util.List">
        INSERT INTO SYS_USER (
            USER_NAME,
            REAL_NAME,
            AVATAR,
            SEX,
            PASSWORD,
            SALT,
            BIRTHDAY,
            DIS_FLAG,
            CREATE_USER,
            CREATE_DATE,
            UPDATE_USER,
            UPDATE_DATE)
        VALUES
        <foreach collection="list" item="item" index= "index" separator =",">
            (
            #{item.userName,jdbcType=VARCHAR},
            #{item.realName,jdbcType=VARCHAR},
            #{item.avatar,jdbcType=VARCHAR},
            #{item.sex,jdbcType=INTEGER},
            #{item.password,jdbcType=VARCHAR},
            #{item.salt,jdbcType=VARCHAR},
            #{item.birthday,jdbcType=DATE},
            #{item.disFlag,jdbcType=INTEGER},
            #{item.createUser,jdbcType=VARCHAR},
            #{item.createDate,jdbcType=TIMESTAMP},
            #{item.updateUser,jdbcType=VARCHAR},
            #{item.updateDate,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
</mapper>
