<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.pzh.system.web.project.sys.dao.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="cn.pzh.system.web.project.common.dao.first.entity.SystemUserEntity" >
        <result column="ID" property="id" jdbcType="INTEGER" />
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
        <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
        <result column="AVATAR" property="avatar" jdbcType="VARCHAR" />
        <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
        <result column="SALT" property="salt" jdbcType="VARCHAR" />
        <result column="SEX" property="sex" jdbcType="INTEGER" />
        <result column="BIRTHDAY" property="birthday" jdbcType="DATE" />
        <result column="IS_ONLINE" property="isOnline" jdbcType="INTEGER" />
        <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
        <result column="roleName" property="roleName" jdbcType="VARCHAR" />
        <result column="DEPT_ID" property="deptId" jdbcType="INTEGER" />
        <result column="DEPTNAME" property="deptName" jdbcType="VARCHAR" />
        <result column="DIS_FLAG" property="disFlag" jdbcType="INTEGER" />
        <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
        <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
        <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
        <result column="UPDATE_DATE" property="updateDate" jdbcType="DATE" />
    </resultMap>

    <!-- 开启基于redis的二级缓存 -->
    <!--<cache type="cn.pzh.system.web.project.common.conf.redis.RedisCache"/>-->

    <sql id="selectColumn">
        SYS_USER.ID,
        SYS_USER.USER_NAME,
        SYS_USER.REAL_NAME,
        SYS_USER.AVATAR,
        SYS_USER.SEX,
        SYS_USER.PASSWORD,
        SYS_USER.SALT,
        SYS_USER.BIRTHDAY,
        SYS_USER.IS_ONLINE,
        SYS_USER.ROLE_ID,
        SYS_USER.DEPT_ID,
        SYS_USER.DIS_FLAG,
        SYS_USER.CREATE_DATE,
        SYS_USER.UPDATE_DATE,
        SYS_USER.CREATE_USER,
        SYS_USER.UPDATE_USER,
        SYS_DEPT.SIMPLE_NAME AS DEPTNAME
    </sql>
    <!--  -->
    <select id="getUsers" resultMap="BaseResultMap">
  	     SELECT
          <include refid="selectColumn"></include>,
          (SELECT GROUP_CONCAT(SYS_ROLE.NAME,',') FROM SYS_ROLE SYS_ROLE WHERE INSTR(SYS_USER.role_id,SYS_ROLE.ID)) roleName
        FROM SYS_USER SYS_USER
         LEFT JOIN SYS_DEPT SYS_DEPT
         ON SYS_USER.DEPT_ID = SYS_DEPT.ID
    </select>

    <!--  -->
    <select id="getUserByLoginName" parameterType="String" resultMap="BaseResultMap">
        SELECT
            SYS_USER.USER_NAME,
            SYS_USER.REAL_NAME,
            SYS_USER.AVATAR,
            SYS_USER.PASSWORD,
            SYS_USER.SALT,
            SYS_USER.ROLE_ID,
            SYS_USER.DEPT_ID,
            SYS_USER.IS_ONLINE,
            SYS_USER.DIS_FLAG,
            SYS_DEPT.SIMPLE_NAME AS DEPTNAME
        FROM
          SYS_USER SYS_USER
        LEFT JOIN SYS_DEPT SYS_DEPT
        ON SYS_USER.DEPT_ID = SYS_DEPT.ID
        LEFT JOIN SYS_CONTACT SYS_CONTACT
        ON SYS_USER.USER_NAME = SYS_CONTACT.USER_NAME
        WHERE (SYS_CONTACT.CONTACT_TYPE = 1 OR SYS_CONTACT.CONTACT_TYPE = 2) AND
        (SYS_USER.USER_NAME = #{loginName,jdbcType=VARCHAR}
        OR SYS_CONTACT.CONTACT_INFO = #{loginName,jdbcType=VARCHAR})
        LIMIT 1,1
    </select>
    <select id="getUserByUserName" parameterType="String" resultMap="BaseResultMap">
        SELECT
          <include refid="selectColumn"></include>
        FROM
          SYS_USER SYS_USER
        LEFT JOIN SYS_DEPT SYS_DEPT
        ON SYS_USER.DEPT_ID = SYS_DEPT.ID
        WHERE SYS_USER.USER_NAME = #{userName,jdbcType=VARCHAR}
    </select>

    <!--  -->
    <insert id="saveUser" parameterType="cn.pzh.system.web.project.common.dao.first.entity.SystemUserEntity" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user (

            USER_NAME,
            REAL_NAME,
            AVATAR,
            SEX,
            PASSWORD,
            SALT,
            BIRTHDAY,
            DIS_FLAG,
            CREATE_USER,
            CREATE_DATE,
            UPDATE_USER,
            UPDATE_DATE)
        values (
            #{userName,jdbcType=VARCHAR},
            #{realName,jdbcType=VARCHAR},
            #{avatar,jdbcType=VARCHAR},
            #{sex,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{salt,jdbcType=VARCHAR},
            #{birthday,jdbcType=DATE},
            #{disFlag,jdbcType=NUMERIC},
            #{createUser,jdbcType=VARCHAR},
            #{createDate,jdbcType=TIMESTAMP},
            #{updateUser,jdbcType=VARCHAR},
            #{updateDate,jdbcType=TIMESTAMP}
        )
    </insert>

</mapper>
